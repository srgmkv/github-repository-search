{"version":3,"sources":["Images/github2.svg","Images/star.svg","Images/watcher.svg","Images/github.svg","components/Header/Header.tsx","actions/index.ts","components/SearchBar/SearchBar.tsx","components/Card/Card.tsx","components/MainSection/Results.tsx","components/MainSection/MainSection.tsx","Views/App/App.tsx","reducers/mainReducer.ts","sagas/api-saga.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","title","src","Image","alt","ACTION_INPUT_CHANGED","ACTION_DATA_LOADED","ACTION_API_ERRORED","connect","state","inputValue","changeInput","type","_ref","id","onChange","event","value","target","Card","_ref$card","card","url","name","stars","watchers","starIco","watchersIco","items","emptyDataRecieved","error","cards","length","map","item","components_Card_Card","key","Fragment","Message","noRes","errMes","str","loading","bgImage","style","backgroundImage","concat","MainSection_Results","App","components_Header_Header","components_SearchBar_SearchBar","components_MainSection_MainSection","initState","errorMessage","reducer","arguments","undefined","action","A","data","Object","objectSpread","errorData","watchInput","handleInput","regenerator_default","wrap","_context","prev","next","takeLatest","stop","_marked","dataFromApi","mappedItems","_context2","delay","call","fetchRepos","sent","fetchedDataMapper","put","t0","_marked2","query","axios","get","dataToMap","html_url","full_name","stargazers_count","watchers_count","sort","b","slice","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","apiSaga","ReactDOM","render","es","Views_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.54d5b892.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github2.9f84c544.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.385d7b6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/watcher.6a7e791d.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.75895134.svg\";","import React from 'react'\nimport './Header.scss'\nimport Image from '../../Images/github2.svg'\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <a href=\"https://github.com/srgmkv\" title=\"github.com/srgmkv\">\n        <img src={Image} alt=\"\"/>\n      </a>\n      <div className=\"title\">{`{</>}`} Github repo finder</div>\n    </div>\n\n  )\n}\n\nexport default Header","import { Action } from 'redux'\nimport { ItemModel } from '../interfaces'\n\nexport const ACTION_INPUT_CHANGED= 'INPUT_CHANGED'\nexport const ACTION_DATA_LOADED = 'DATA_LOADED'\nexport const ACTION_API_ERRORED = 'API_ERRORED'\n\nexport function isAction<A extends Action>(action: Action, type: string): action is A {\n  return action.type === type\n}\n\nexport interface IActionInputChanged extends Action {\n  type: 'INPUT_CHANGED'\n  inputValue: string\n}\n\nexport interface IActionDataLoaded extends Action {\n  type: 'DATA_LOADED'\n  data: ItemModel[]\n}\n\nexport interface IActionApiErrored extends Action{\n  type: 'API_ERRORED'\n  errorData: Readonly<{}>\n}\n\nexport type AppActions = IActionInputChanged | IActionDataLoaded | IActionApiErrored;\n\nexport function changeInput(inputValue: string): IActionInputChanged {\n  return { type: ACTION_INPUT_CHANGED, inputValue }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport './SearchBar.scss'\nimport { changeInput } from '../../actions/index'\nimport { IState } from '../../interfaces'\n\ninterface Props {\n  changeInput: typeof changeInput\n  inputValue: string\n}\n\n//Компонент для обработки действий с инпутом\nconst SearchBar = ({ inputValue, changeInput }: Props) => {\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value }: { value: string } = event.target\n    changeInput(value) //отправляем экшн и меняем стейт\n   \n  }\n\n  return (\n    <div className='input'>\n      <input type=\"text\" id=\"text-input\"\n        onChange={handleChange}\n        value={inputValue} \n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: IState): { inputValue: string } => ({\n  inputValue: state.inputValue\n})\n\nexport default connect(mapStateToProps, { changeInput })(SearchBar)","import React from 'react';\nimport { ItemModel } from '../../interfaces'\nimport './Cards.scss'\nimport starIco from '../../Images/star.svg'\nimport watchersIco from '../../Images/watcher.svg'\n\ninterface ItemProps {\n  card: ItemModel;\n}\n\n//Компонент отрисовывает карточку репозитория\nconst Card = ({ card: { url, name, stars, watchers } }: ItemProps) => {\n  return (\n    <div className='card' >\n      <a href={url} className='name' title=\"See on Github\">{name}</a>\n\n      <div className='stars-watchers-cont'>\n        <div className='stars'>\n          <img src={starIco} alt=\"\"/>\n          {stars} <span>stars</span>\n        </div>\n\n        <div className='watchers'>\n          <img src={watchersIco} alt=\"\"/>\n          {watchers} <span>watchers</span>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React, { ReactNode } from 'react'\nimport { connect } from 'react-redux'\nimport Card from '../Card/Card'\nimport { ItemModel, IState } from '../../interfaces'\n\ninterface StateProps {\n  items: ItemModel[]\n  emptyDataRecieved: boolean\n  error: boolean\n}\n\n//Компонент для отображения результата запроса\nconst Results = ({ error, items, emptyDataRecieved }: StateProps) => {\n //если список репозиториев получен, то генерируем JSX c карточками репозиториев\n  const cards =\n    items.length > 0 &&\n    <div id=\"cards-container\">\n      {items.map((item: ItemModel) => <Card key={item.id} card={item} />)}\n    </div>\n\n  return (\n    <>\n      {!emptyDataRecieved ? cards : Message(noRes)} {/* блок с карточками репозиториев либо сообщение о получении пустых данных */}\n      {error && Message(errMes)} {/*сообщение об ошибке */}\n    </>\n  )\n}\n\nconst mapStateToProps = (state: IState): StateProps => ({\n  items: state.items,\n  emptyDataRecieved: state.emptyDataRecieved,\n  error: state.error\n})\n\nexport default connect(mapStateToProps)(Results)\n\nconst Message = (str: string) => <div id=\"message\">{str}</div>\n\nconst errMes: string =\n  `Error occured.  \nCheck for incorrect symbols or try later`\n\nconst noRes: string =\n  `There is no result on this request.\nTry it to change.`\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Results from './Results'\nimport './Main.scss'\nimport { IState, ItemModel } from '../../interfaces'\nimport Image from '../../Images/github.svg'\n\ninterface StateProps {\n  loading: boolean\n  items: ItemModel[]\n}\n\n//Компонент генерирует блок под полем ввода\nconst MainSection = ({ loading, items }: StateProps) => {\n   //здесь храним путь к фону по условию, если загрузка или нечего отображать, то пустой фон\n  const bgImage: string = loading || items.length > 0 ? '' : Image\n\n  return (\n    <div className=\"main-section\">\n      <div id=\"image\" style={{backgroundImage: `url(${bgImage})`}}>\n        {loading ? <div id=\"loader\" /> : <Results />}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: IState): StateProps => ({\n  loading: state.loading,\n  items: state.items\n})\n\nexport default connect(mapStateToProps)(MainSection)","import React from 'react'\nimport './index.scss'\nimport Header from '../../components/Header/Header'\nimport SearchBar from '../../components/SearchBar/SearchBar'\nimport MainSection from '../../components/MainSection/MainSection'\n\n\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <SearchBar />\n      <MainSection />\n    </>\n  );\n}\n\nexport default App;","import { IState } from '../interfaces'\nimport { AppActions} from '../actions'\nimport  * as A from '../actions'\n\n\nconst initState: IState = {\n  items: [],\n  loading: false,\n  error: false,\n  errorMessage: '',\n  inputValue: '',\n  emptyDataRecieved: false\n}\n\nconst reducer = (state: IState = initState, action: AppActions): IState => {\n  switch (action.type) {\n\n    case A.ACTION_DATA_LOADED:\n      return (!action.data.length) ? {\n        ...initState,\n        inputValue: state.inputValue,\n        emptyDataRecieved: true\n      } : {\n          ...initState,\n          items: action.data,\n          inputValue: state.inputValue\n        }\n\n    case A.ACTION_API_ERRORED:\n      return {\n        ...initState,\n        error: true,\n        errorMessage: action.errorData,\n        inputValue: state.inputValue\n      }\n\n    case A.ACTION_INPUT_CHANGED:\n      return (action.inputValue.length < 3) ? {\n        ...initState,\n        inputValue: action.inputValue\n      } : {\n          ...state,\n          inputValue: action.inputValue,\n          error: false,\n          loading: true\n        }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { takeLatest, call, put, delay } from \"redux-saga/effects\"\nimport axios from 'axios'\nimport { ACTION_INPUT_CHANGED, ACTION_DATA_LOADED, ACTION_API_ERRORED } from '../actions'\nimport { ItemModel } from '../interfaces'\n\ninterface ActionInputChange {\n  type: 'INPUT_CHANGED'\n  inputValue: string\n}\n\nexport default function* watchInput() {\n  yield takeLatest(ACTION_INPUT_CHANGED, handleInput);\n}\nfunction* handleInput(action: ActionInputChange) {\n  const { inputValue } = action\n\n  try {\n    if (inputValue.length > 2) {\n      yield delay(500) // сага предоставляет внутреннюю debounce ф-ю ввиде delay\n      const dataFromApi: any[] = yield call(fetchRepos, inputValue)\n      const mappedItems = fetchedDataMapper(dataFromApi)\n      yield put({ type: ACTION_DATA_LOADED, data: mappedItems })\n    }\n  } catch (error) {\n    yield put({ type: ACTION_API_ERRORED, errorData: error })\n  }\n}\n\n\nfunction fetchRepos(query: string) {\n  const apiUrlForRepos: string = 'https://api.github.com/search/repositories?q='\n  return axios.get(`${apiUrlForRepos}${query}`)\n}\n\n//вспомогательная ф-я, преобразующая полченные данные в нужный вид\nfunction fetchedDataMapper(dataToMap: any): ItemModel[] {\n  const items: any[] = dataToMap.data.items\n  return items\n    .map((item) => ({\n      id: item.id,\n      url: item.html_url,\n      name: item.full_name,\n      stars: item.stargazers_count,\n      watchers: item.watchers_count\n    }))\n    .sort((a: any, b: any) => b.stars - a.stars)\n    .slice(0, 10)\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from \"redux-saga\"\nimport App from './Views/App/App'\nimport reducer from './reducers/mainReducer'\nimport apiSaga from './sagas/api-saga'\n\nconst initialiseSagaMiddleware = createSagaMiddleware()\n\n\nconst store = createStore(\n  reducer, composeWithDevTools(\n    applyMiddleware(initialiseSagaMiddleware)\n))\n\ninitialiseSagaMiddleware.run(apiSaga)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))\n"],"sourceRoot":""}